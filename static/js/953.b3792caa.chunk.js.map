{"version":3,"file":"static/js/953.b3792caa.chunk.js","mappings":"mTAOAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,IAFjB,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAD3B,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADnC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADnC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,uHC9BfO,E,QAAYC,GAAAA,IAAH,oF,mBCERC,EAAd,0IACE,WACE,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAUG,MAAM,MAAMC,MAAM,aAGjC,KAPH,GAA6BC,EAAAA,U,2IC2D7B,UAvDa,WACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qFACEH,GAAa,GADf,mBAGUZ,EAAAA,EAAAA,IAAgBa,GAASG,MAAK,SAAAC,GAClC,IAAKA,EAASC,KACZ,OAAOC,QAAQC,OAAO,IAAIC,MAAM,0BAElCX,EAAYO,EAASC,MACrBN,GAAa,EACd,IATL,sDAWIU,QAAQC,IAAI,SAXhB,yDADc,uBAAC,WAAD,wBAedC,EACD,GAAE,CAACX,KAGF,iCACE,SAAC,KAAD,UACGY,OAAOC,OAAOjB,GAAUkB,KACvB,gBAAG5B,EAAH,EAAGA,GAAI6B,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACE,2BACE,gBAEEC,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,EACLK,QAAQ,OACR7B,MAAO,IACP8B,OAAQ,OAEV,wBAAKN,KACL,wCAAgBC,OAdT/B,EADX,MAoBHY,IAAa,SAAC,IAAD,MAGnB,C,mMCvDYyB,GAAYjC,EAAAA,EAAAA,IAAOkC,EAAAA,GAAPlC,CAAH,sBAETmC,EAAgBnC,EAAAA,GAAAA,IAAH,kIAOboC,EAAsBpC,EAAAA,GAAAA,GAAH,2FAKnBqC,EAAgBrC,EAAAA,GAAAA,IAAH,8CAIbsC,EAAWtC,EAAAA,GAAAA,GAAH,wH","sources":["Api/Api.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/Cast.jsx","pages/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25da517c2bc168beb7d03992630b742e';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const LoaderBox = styled.div`\ndisplay: flex;\njustify-content: center;\nmargin-top: 30px\n`","import React from 'react';\nimport {LoaderBox} from './Loader.styled'\nimport { TailSpin} from 'react-loader-spinner';\n\nexport  class Loader extends React.Component {\n  render() {\n    return (\n      <LoaderBox>\n        <TailSpin width=\"400\" color=\"#3f51b5\" />\n      </LoaderBox>\n    );\n  }\n}","import PropTypes from 'prop-types';\nimport { getMovieCredits } from '../../Api/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastList } from './MovieDetails.styled';\nimport noImage from '../../image/noImage.jpg'\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchInfoCast() {\n      setIsLoading(true);\n      try {\n        await getMovieCredits(movieId).then(responce => {\n          if (!responce.cast) {\n            return Promise.reject(new Error('No information about!'));\n          }\n          setCastList(responce.cast);\n          setIsLoading(false);\n        });\n      } catch (err) {\n        console.log('Error');\n      }\n    }\n    fetchInfoCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <CastList>\n        {Object.values(castList).map(\n          ({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                \n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : noImage\n                }\n                alt={name}\n                loading=\"lazy\"\n                width={120}\n                height={180}\n              />\n              <h4>{name}</h4>\n              <p> Character: {character}</p>\n            </li>\n          )\n        )}\n      </CastList>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nCast.propTypes = {\n  castList: PropTypes.arrayOf(PropTypes.string)\n};\nexport default Cast;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SyledLink = styled(NavLink)``;\n\nexport const FilmContainer = styled.div`\n  margin-top: 15px;\n  padding-bottom: 20px;\n  box-shadow: 0px 2px 0px 0px #00000033;\n  display: flex;\n`;\n\nexport const AdditionalContainer = styled.ul`\n  padding-bottom: 20px;\n  box-shadow: 0px 2px 0px 0px #00000033;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 30px;\n`;\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  gap: 20px;\n`;\n"],"names":["axios","API_KEY","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","LoaderBox","styled","Loader","width","color","React","useState","castList","setCastList","isLoading","setIsLoading","movieId","useParams","useEffect","then","responce","cast","Promise","reject","Error","console","log","fetchInfoCast","Object","values","map","profile_path","name","character","src","noImage","alt","loading","height","SyledLink","NavLink","FilmContainer","AdditionalContainer","InfoContainer","CastList"],"sourceRoot":""}