{"version":3,"file":"static/js/605.1f9e18e4.chunk.js","mappings":"mTAOAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,IAFjB,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAD3B,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADnC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADnC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,uHC9BfO,E,QAAYC,GAAAA,IAAH,oF,mBCERC,EAAd,0IACE,WACE,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAUG,MAAM,MAAMC,MAAM,aAGjC,KAPH,GAA6BC,EAAAA,U,0HC8C7B,UA3CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qFACEH,GAAa,GADf,mBAGUX,EAAAA,EAAAA,IAAgBY,GAASG,MAAK,SAAAC,GAClC,IAAKA,EAASC,QACZ,OAAOC,QAAQC,OAAO,IAAIC,MAAM,eAElCX,EAAWO,EAASC,QACrB,IARL,sDAUII,QAAQC,IAAI,SAVhB,uBAYIX,GAAa,GAZjB,2EADc,uBAAC,WAAD,wBAgBdY,EACD,GAAE,CAACX,IAECJ,GAKH,0BACGgB,OAAOC,OAAOjB,GAASkB,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQ9B,EAApB,EAAoBA,GAApB,OAC1B,2BACE,wBAAK8B,KACL,uBAAID,MAFG7B,EADiB,IAM3BY,IAAa,SAAC,IAAD,OAXT,IAcV,C","sources":["Api/Api.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/Reviews.jsx"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25da517c2bc168beb7d03992630b742e';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const LoaderBox = styled.div`\ndisplay: flex;\njustify-content: center;\nmargin-top: 30px\n`","import React from 'react';\nimport {LoaderBox} from './Loader.styled'\nimport { TailSpin} from 'react-loader-spinner';\n\nexport  class Loader extends React.Component {\n  render() {\n    return (\n      <LoaderBox>\n        <TailSpin width=\"400\" color=\"#3f51b5\" />\n      </LoaderBox>\n    );\n  }\n}","import PropTypes from 'prop-types';\nimport { getMovieReviews } from '../../Api/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\n\nconst Reviews = () => {\n  const [reviews, setRevievs] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      setIsLoading(true);\n      try {\n        await getMovieReviews(movieId).then(responce => {\n          if (!responce.results) {\n            return Promise.reject(new Error('No reviews'));\n          }\n          setRevievs(responce.results);\n        });\n      } catch (err) {\n        console.log('Error');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {Object.values(reviews).map(({ content, author, id }) => (\n        <li key={id}>\n          <h4>{author}</h4>\n          <p>{content}</p>\n        </li>\n      ))}\n      {isLoading && <Loader />}\n    </ul>\n  );\n};\n Reviews.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.string)\n};\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","LoaderBox","styled","Loader","width","color","React","useState","reviews","setRevievs","isLoading","setIsLoading","movieId","useParams","useEffect","then","responce","results","Promise","reject","Error","console","log","fetchReviews","Object","values","map","content","author"],"sourceRoot":""}