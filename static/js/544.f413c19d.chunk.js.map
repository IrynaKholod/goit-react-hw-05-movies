{"version":3,"file":"static/js/544.f413c19d.chunk.js","mappings":"mTAOAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,IAFjB,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IAD3B,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADnC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADnC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,uHC9BfO,E,QAAYC,GAAAA,IAAH,oF,mBCERC,EAAd,0IACE,WACE,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAUG,MAAM,MAAMC,MAAM,aAGjC,KAPH,GAA6BC,EAAAA,U,qJC6D7B,UAxDa,WACX,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qFACEH,EAAa,QADf,mBAGUnB,EAAAA,EAAAA,MAAcuB,MAAK,SAAAC,GACvB,GAA+B,IAA3BA,EAASC,cACX,OAAOC,QAAQC,OAAO,IAAIC,MAAM,mBAElCX,EAAeO,EAASK,SACxBV,EAAa,QACd,IATL,uDAWI,IAAIS,MACJE,QAAQC,IAAI,SAZhB,0DADc,uBAAC,WAAD,wBAiBdC,EACD,GAAE,KAGD,UAAC,KAAD,YACE,SAAC,KAAD,8BAEA,SAAC,KAAD,UACGhB,EAAYiB,KAAI,SAAAC,GAAK,OACpB,yBACE,UAAC,KAAD,CAAWC,GAAE,kBAAaD,EAAM5B,IAAM8B,MAAO,CAAEC,KAAMjB,GAArD,WACE,SAAC,KAAD,CACEkB,IACEJ,EAAMK,YAAN,yCACsCL,EAAMK,aACxCC,EAENC,IAAKP,EAAMQ,kBAEb,wBAAKR,EAAMQ,qBAVNR,EAAM5B,GADK,MAiBvBY,IAAa,SAAC,IAAD,MAGnB,C,yKCxDYyB,EAAYjC,EAAAA,GAAAA,GAAH,+CAGTkC,GAAYlC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAH,uFAMToC,EAAapC,EAAAA,GAAAA,GAAH,yHAMVqC,EAASrC,EAAAA,GAAAA,IAAH,4H","sources":["Api/Api.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.js"],"sourcesContent":["// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25da517c2bc168beb7d03992630b742e';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const LoaderBox = styled.div`\ndisplay: flex;\njustify-content: center;\nmargin-top: 30px\n`","import React from 'react';\nimport {LoaderBox} from './Loader.styled'\nimport { TailSpin} from 'react-loader-spinner';\n\nexport  class Loader extends React.Component {\n  render() {\n    return (\n      <LoaderBox>\n        <TailSpin width=\"400\" color=\"#3f51b5\" />\n      </LoaderBox>\n    );\n  }\n}","import PropTypes from 'prop-types';\nimport { getTrending } from '../../Api/Api';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { TrendsList, HomeTitle, Poster, SyledLink } from './Home.styled';\nimport { Container } from 'pages/Layout/Layout.syled';\nimport noImage from '../../image/noImage.jpg';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setIsLoading('true');\n      try {\n        await getTrending().then(responce => {\n          if (responce.total_results === 0) {\n            return Promise.reject(new Error('No such Movie!'));\n          }\n          setTrendMovies(responce.results);\n          setIsLoading('false');\n        });\n      } catch (error) {\n        new Error();\n        console.log('Error');\n      }\n    }\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <Container>\n      <HomeTitle>Trending today</HomeTitle>\n\n      <TrendsList>\n        {trendMovies.map(movie => (\n          <li key={movie.id}>\n            <SyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <Poster\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                    : noImage\n                }\n                alt={movie.original_title}\n              />\n              <h3>{movie.original_title}</h3>\n            </SyledLink>\n          </li>\n        ))}\n      </TrendsList>\n\n      {isLoading && <Loader />}\n    </Container>\n  );\n};\n\nHome.propTypes = {\n  movie: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomeTitle = styled.h2`\n  text-align: center;\n`;\nexport const SyledLink = styled(NavLink)`\n  outline: none;\n  text-decoration: none;\n  color: inherit;\n`;\n\nexport const TrendsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  gap: 20px;\n`;\n\nexport const Poster = styled.img`\n  box-shadow: 0px 2px 1px 0px #00000033, 0px 2px 1px 0px #00000033,\n    0px 1px 3px 0px #0000001f;\n`;\n"],"names":["axios","API_KEY","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","LoaderBox","styled","Loader","width","color","React","useState","trendMovies","setTrendMovies","isLoading","setIsLoading","location","useLocation","useEffect","then","responce","total_results","Promise","reject","Error","results","console","log","fetchMovies","map","movie","to","state","from","src","poster_path","noImage","alt","original_title","HomeTitle","SyledLink","NavLink","TrendsList","Poster"],"sourceRoot":""}